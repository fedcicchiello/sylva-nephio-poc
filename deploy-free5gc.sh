#! /bin/bash

set -ex

CURRENT_DIR="$(realpath $(dirname $0))"
CONTAINERLAB_TOPO_PATH="${CURRENT_DIR}/clab-topo.gotmpl"
VARS_JSON_PATH="${CURRENT_DIR}/vars.json" # this file is generated by the script

export KUBECONFIG="${HOME}/.kube/management.yaml"

# launch the scripts to configure cluster inter-networking
CLUSTERS_NODES=($(docker ps --format '{{.Names}}' | grep 'control-plane' | grep -vE '(management)|(sylva)'))
VARS_JSON="{\"workers\":["
for NODE in "${CLUSTERS_NODES[@]}"; do
  VARS_JSON="${VARS_JSON}\"${NODE}\","
done
VARS_JSON="${VARS_JSON::-1}"
VARS_JSON="${VARS_JSON}]}"
echo "${VARS_JSON}" > "${VARS_JSON_PATH}"
sudo containerlab deploy --topo "${CONTAINERLAB_TOPO_PATH}" --vars "${VARS_JSON_PATH}"

# from test-infra/e2e/provision/hacks/vlan-interfaces.sh
for NODE in "${CLUSTERS_NODES[@]}"; do
    for i in {2..6}; do
        docker exec "$NODE" ip link add link eth1 name "eth1.$i" type vlan id "$i"
        docker exec "$NODE" ip link set up "eth1.$i"
    done
done

# from test-infra/e2e/tests/free5gc/002-network.yaml
cat <<EOF | kubectl apply -f -
apiVersion: config.porch.kpt.dev/v1alpha1
kind: PackageVariant
metadata:
  name: network
spec:
  upstream:
    repo: catalog-distros-sandbox
    package: network
    revision: v2.0.0
  downstream:
    repo: mgmt
    package: network
  annotations:
    approval.nephio.org/policy: initial
EOF

# from test-infra/e2e/tests/free5gc/002-secret.yaml
cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Secret
metadata:
  name: srl.nokia.com
  namespace: default
type: kubernetes.io/basic-auth
stringData:
  username: admin
  password: NokiaSrl1!
EOF

# from test-infra/e2e/provision/hacks/network-topo.sh
export LEAF_IP=$(docker inspect net-5g-leaf -f '{{.NetworkSettings.Networks.kind.IPAddress}}')
cat <<EOF | kubectl apply -f -
apiVersion: topo.nephio.org/v1alpha1
kind: RawTopology
metadata:
  name: nephio
spec:
  nodes:
    srl:
      address: ${LEAF_IP}:57400
      provider: srl.nokia.com
    mgmt:
      provider: docker.io
    regional:
      provider: docker.io
      labels:
        nephio.org/cluster-name: regional
    edge01:
      provider: docker.io
      labels:
        nephio.org/cluster-name: edge01
    edge02:
      provider: docker.io
      labels:
        nephio.org/cluster-name: edge02
  links:
  - endpoints:
    - { nodeName: srl, interfaceName: e1-1}
    - { nodeName: edge01, interfaceName: eth1}
  - endpoints:
    - { nodeName: srl, interfaceName: e1-2}
    - { nodeName: edge02, interfaceName: eth1}
  - endpoints:
    - { nodeName: srl, interfaceName: e1-3}
    - { nodeName: regional, interfaceName: eth1}
EOF

echo "follow the step one the link below to deploy the free5GC control plane functions on the regional cluster"
echo "# https://github.com/nephio-project/docs/blob/v2.0.0/content/en/docs/guides/user-guides/exercise-1-free5gc.md#step-4-deploy-free5gc-control-plane-functions"
read -p "Press <Enter> to continue"

# deploy free5GC Operator on all the clusters
# from test-infra/e2e/tests/free5gc/004-free5gc-operator.yaml
cat <<EOF | kubectl apply -f -
apiVersion: config.porch.kpt.dev/v1alpha2
kind: PackageVariantSet
metadata:
  name: free5gc-operator
spec:
  upstream:
    repo: catalog-workloads-free5gc
    package: free5gc-operator
    revision: v2.0.0
  targets:
  - objectSelector:
      apiVersion: infra.nephio.org/v1alpha1
      kind: WorkloadCluster
    template:
      annotations:
        approval.nephio.org/policy: initial
EOF

# deploy the UPF on the edge clusters
# from test-infra/e2e/tests/free5gc/005-edge-free5gc-upf.yaml
cat <<EOF | kubectl apply -f -
apiVersion: config.porch.kpt.dev/v1alpha2
kind: PackageVariantSet
metadata:
  name: edge-free5gc-upf
spec:
  upstream:
    repo: catalog-workloads-free5gc
    package: pkg-example-upf-bp
    revision: v2.0.0
  targets:
  - objectSelector:
      apiVersion: infra.nephio.org/v1alpha1
      kind: WorkloadCluster
      matchLabels:
        nephio.org/site-type: edge
    template:
      downstream:
        package: free5gc-upf
      annotations:
        approval.nephio.org/policy: initial
      injectors:
      - nameExpr: target.name
EOF

# deploy the AMF on the regional cluster
# from test-infra/e2e/tests/free5gc/006-regional-free5gc-amf.yaml
cat <<EOF | kubectl apply -f -
apiVersion: config.porch.kpt.dev/v1alpha2
kind: PackageVariantSet
metadata:
  name: regional-free5gc-amf
spec:
  upstream:
    repo: catalog-workloads-free5gc
    package: pkg-example-amf-bp
    revision: v2.0.0
  targets:
  - objectSelector:
      apiVersion: infra.nephio.org/v1alpha1
      kind: WorkloadCluster
      matchLabels:
        nephio.org/site-type: regional
    template:
      downstream:
        package: free5gc-amf
      annotations:
        approval.nephio.org/policy: initial
      injectors:
      - nameExpr: target.name
EOF

# deploy the SMF on the regional cluster
# from test-infra/e2e/tests/free5gc/006-regional-free5gc-smf.yaml
cat <<EOF | kubectl apply -f -
apiVersion: config.porch.kpt.dev/v1alpha2
kind: PackageVariantSet
metadata:
  name: regional-free5gc-smf
spec:
  upstream:
    repo: catalog-workloads-free5gc
    package: pkg-example-smf-bp
    revision: v2.0.0
  targets:
  - objectSelector:
      apiVersion: infra.nephio.org/v1alpha1
      kind: WorkloadCluster
      matchLabels:
        nephio.org/site-type: regional
    template:
      downstream:
        package: free5gc-smf
      annotations:
        approval.nephio.org/policy: initial
      injectors:
      - nameExpr: target.name
EOF
